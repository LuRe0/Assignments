/******************************************************************************
filename    array.c
author      Anthon Reid
DP email    anthon.reid@digipen.edu
course      CS120
section     A
lab week    2
due date    10/21/2021

Brief Description:
  The program will manipulate arrays by reversing 
  the order of its elements, adding its elements,
  multiplying each element by a given multiplier,
  and determining their dot and cross products. 
  
******************************************************************************/

/******************************************************************************
   Function: reverse_array

Description: This will reverse the order of a given array..

     Inputs: a - integer that will be used to hold the resulting third arrays.
             size - integer that will be used to hold the size of the arrays.
             
    Outputs: A reversed array.
******************************************************************************/
void reverse_array(int a[], int size)
{
	
} 


/******************************************************************************
   Function: add_arrays

Description: This will calculate a third array by adding two arrays together.

     Inputs: a - an integer array that will be used in the dot product calculation
             b - an integer array that will be used in the dot product calculation
             c - integer that will be used to hold the resulting third arrays.
             size - integer that will be used to hold the size of the arrays.
             
    Outputs: A resulting third array.
******************************************************************************/
void add_arrays(const int a[], const int b[], int c[], int size)
{
int i;
for( i = 0; i < size; i++)
  {
	c[i] = a[i] + b[i]; 	
  }
}


/******************************************************************************
   Function: scalar_multiply

Description: This will calculate a new array by multiplying
             a scalar by an initial array.

     Inputs: a - an integer array that will be used in the dot product calculation
             size - integer that will be used to hold the size of the arrays.
             multiplier - integer that will be used to be muti[plied by the array.
             
    Outputs: The resulting array from the muliplication of an array by the scalar.
******************************************************************************/
void scalar_multiply(int a[], int size, int multiplier)
{
	
}


/******************************************************************************
   Function: dot_product

Description: This will calculate the dot product of two arrays.
             Returns the resuling scalar.

     Inputs: a - an integer array that will be used in the dot product calculation
             b - an integer array that will be used in the dot product calculation
             size - integer that will be used to hold the size of the arrays.
             
    Outputs: The scalar result of the dot product of the arrays.  
******************************************************************************/
int dot_product(const int a[], const int b[], int size)
{
 
 
 return 0;	
}


/******************************************************************************
   Function: cross_product

Description: This will calculate the the cross product of two arrays.

     Inputs: a - an integer array that will be used in the cross product calculation
             b - an integer array that will be used in the cross product calculation
             c - integer that will be used to the resulting third array.
             
    Outputs:The resulting third array. 
******************************************************************************/
void cross_product(const int a[], const int b[], int c[])
{
	
}
